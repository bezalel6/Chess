.TH "ver14.SharedClasses.Game.PlayerColor" 3 "Sun Apr 24 2022" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ver14.SharedClasses.Game.PlayerColor
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPlayerColor\fP (int \fBstartingRow\fP, int \fBdiff\fP)"
.br
.ti -1c
.RI "abstract \fBPlayerColor\fP \fBgetOpponent\fP ()"
.br
.ti -1c
.RI "String \fBtoString\fP ()"
.br
.ti -1c
.RI "String \fBgetName\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBPlayerColor\fP \fBgetColor\fP (int clr)"
.br
.ti -1c
.RI "static \fBPlayerColor\fP \fBgetPlayerFromFen\fP (String playerToMove)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBWHITE\fP"
.br
.ti -1c
.RI "\fBBLACK\fP"
.br
.ti -1c
.RI "\fBNO_PLAYER\fP"
.br
.ti -1c
.RI "final int \fBasInt\fP"
.br
.ti -1c
.RI "final int \fBindexOf2\fP"
.br
.ti -1c
.RI "final int \fBstartingRow\fP"
.br
.ti -1c
.RI "final int \fBdiff\fP"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static final \fBPlayerColor\fP[] \fBPLAYER_COLORS\fP = {\fBWHITE\fP, \fBBLACK\fP}"
.br
.ti -1c
.RI "static final int \fBNUM_OF_PLAYERS\fP = 2"
.br
.in -1c
.SH "Detailed Description"
.PP 
Player color - represents a player color\&.
.PP
\fBAuthor\fP
.RS 4
Bezalel Avrahami (bezalel3250@gmail.com) 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "ver14\&.SharedClasses\&.Game\&.PlayerColor\&.PlayerColor (int startingRow, int diff)"
Instantiates a new Player color\&.
.PP
\fBParameters\fP
.RS 4
\fIstartingRow\fP the starting row 
.br
\fIdiff\fP the diff 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "static \fBPlayerColor\fP ver14\&.SharedClasses\&.Game\&.PlayerColor\&.getColor (int clr)\fC [static]\fP"
Gets color\&.
.PP
\fBParameters\fP
.RS 4
\fIclr\fP the clr 
.RE
.PP
\fBReturns\fP
.RS 4
the color 
.RE
.PP

.SS "String ver14\&.SharedClasses\&.Game\&.PlayerColor\&.getName ()"
Gets name\&.
.PP
\fBReturns\fP
.RS 4
the name 
.RE
.PP

.SS "abstract \fBPlayerColor\fP ver14\&.SharedClasses\&.Game\&.PlayerColor\&.getOpponent ()\fC [abstract]\fP"
Gets opponent\&.
.PP
\fBReturns\fP
.RS 4
the opponent 
.RE
.PP

.SS "static \fBPlayerColor\fP ver14\&.SharedClasses\&.Game\&.PlayerColor\&.getPlayerFromFen (String playerToMove)\fC [static]\fP"
Gets player from fen\&.
.PP
\fBParameters\fP
.RS 4
\fIplayerToMove\fP the player to move 
.RE
.PP
\fBReturns\fP
.RS 4
the player from fen 
.RE
.PP

.SS "String ver14\&.SharedClasses\&.Game\&.PlayerColor\&.toString ()"
To string string\&.
.PP
\fBReturns\fP
.RS 4
the string 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "final int ver14\&.SharedClasses\&.Game\&.PlayerColor\&.asInt"
The As int\&. 
.SS "ver14\&.SharedClasses\&.Game\&.PlayerColor\&.BLACK"
\fBInitial value:\fP
.PP
.nf
=(Location\&.BLACK_STARTING_ROW, Location\&.BLACK_DIFF) {
        @Override
        public PlayerColor getOpponent() {
            return WHITE;
        }
    }
.fi
Black\&. 
.SS "final int ver14\&.SharedClasses\&.Game\&.PlayerColor\&.diff"
The moving up ratio\&. 
.SS "final int ver14\&.SharedClasses\&.Game\&.PlayerColor\&.indexOf2"
index of two\&. calculated at initialization for performance\&. calculation: \fC\fBasInt\fP\fP*2 
.SS "ver14\&.SharedClasses\&.Game\&.PlayerColor\&.NO_PLAYER"
\fBInitial value:\fP
.PP
.nf
=(-1, 0) {
        @Override
        public PlayerColor getOpponent() {
            return NO_PLAYER;
        }
    }
.fi
No player\&. 
.SS " final int ver14\&.SharedClasses\&.Game\&.PlayerColor\&.NUM_OF_PLAYERS = 2\fC [static]\fP"
The constant NUM_OF_PLAYERS\&. 
.SS " final \fBPlayerColor\fP [] ver14\&.SharedClasses\&.Game\&.PlayerColor\&.PLAYER_COLORS = {\fBWHITE\fP, \fBBLACK\fP}\fC [static]\fP"
The constant PLAYER_COLORS\&. 
.SS "final int ver14\&.SharedClasses\&.Game\&.PlayerColor\&.startingRow"
The player's Starting row\&. 
.SS "ver14\&.SharedClasses\&.Game\&.PlayerColor\&.WHITE"
\fBInitial value:\fP
.PP
.nf
=(Location\&.WHITE_STARTING_ROW, Location\&.WHITE_DIFF) {
        @Override
        public PlayerColor getOpponent() {
            return BLACK;
        }
    }
.fi
White\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
