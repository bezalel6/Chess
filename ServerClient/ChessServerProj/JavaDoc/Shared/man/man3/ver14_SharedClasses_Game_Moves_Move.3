.TH "ver14.SharedClasses.Game.Moves.Move" 3 "Sun Apr 24 2022" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ver14.SharedClasses.Game.Moves.Move
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBver14\&.SharedClasses\&.Game\&.Moves\&.BasicMove\fP, and Comparable< Move >\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "enum \fBMoveFlag\fP"
.br
.ti -1c
.RI "enum \fBThreefoldStatus\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMove\fP (\fBLocation\fP movingFrom, \fBLocation\fP movingTo, \fBPieceType\fP capturingPieceType)"
.br
.ti -1c
.RI "\fBMove\fP (\fBLocation\fP movingFrom, \fBLocation\fP movingTo)"
.br
.ti -1c
.RI "\fBMove\fP (\fBThreefoldStatus\fP threefoldStatus)"
.br
.ti -1c
.RI "\fBMove\fP (\fBMove\fP other)"
.br
.ti -1c
.RI "\fBMovesList\fP \fBgetCreatorList\fP ()"
.br
.ti -1c
.RI "void \fBsetCreatorList\fP (\fBMovesList\fP creatorList)"
.br
.ti -1c
.RI "void \fBsetMoveAnnotation\fP (String moveAnnotation)"
.br
.ti -1c
.RI "byte \fBgetDisabledCastling\fP ()"
.br
.ti -1c
.RI "void \fBsetDisabledCastling\fP (byte disabledCastling)"
.br
.ti -1c
.RI "void \fBsetThreefoldOption\fP ()"
.br
.ti -1c
.RI "\fBPlayerColor\fP \fBgetMovingColor\fP ()"
.br
.ti -1c
.RI "void \fBsetMovingColor\fP (\fBPlayerColor\fP movingPlayerColor)"
.br
.ti -1c
.RI "int \fBgetPrevFullMoveClock\fP ()"
.br
.ti -1c
.RI "void \fBsetPrevFullMoveClock\fP (int prevFullMoveClock)"
.br
.ti -1c
.RI "int \fBgetPrevHalfMoveClock\fP ()"
.br
.ti -1c
.RI "void \fBsetPrevHalfMoveClock\fP (int prevHalfMoveClock)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBgetPromotingTo\fP ()"
.br
.ti -1c
.RI "void \fBsetPromotingTo\fP (\fBPieceType\fP promotingTo)"
.br
.ti -1c
.RI "\fBBasicMove\fP \fBgetIntermediateMove\fP ()"
.br
.ti -1c
.RI "void \fBsetIntermediateMove\fP (\fBBasicMove\fP intermediateMove)"
.br
.ti -1c
.RI "boolean \fBisCheck\fP ()"
.br
.ti -1c
.RI "\fBEvaluation\fP \fBgetMoveEvaluation\fP ()"
.br
.ti -1c
.RI "void \fBsetMoveEvaluation\fP (\fBEvaluation\fP moveEvaluation)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBgetCapturingPieceType\fP ()"
.br
.ti -1c
.RI "boolean \fBisReversible\fP ()"
.br
.ti -1c
.RI "void \fBsetReversible\fP (boolean reversible)"
.br
.ti -1c
.RI "boolean \fBisCapturing\fP ()"
.br
.ti -1c
.RI "void \fBsetCapturing\fP (\fBPieceType\fP pieceType)"
.br
.ti -1c
.RI "boolean \fBequals\fP (Object o)"
.br
.ti -1c
.RI "String \fBtoString\fP ()"
.br
.ti -1c
.RI "String \fBgetAnnotation\fP ()"
.br
.ti -1c
.RI "boolean \fBstrictEquals\fP (\fBMove\fP move)"
.br
.ti -1c
.RI "\fBMoveFlag\fP \fBgetMoveFlag\fP ()"
.br
.ti -1c
.RI "void \fBsetMoveFlag\fP (\fBMoveFlag\fP moveFlag)"
.br
.ti -1c
.RI "int \fBcompareTo\fP (\fBMove\fP o)"
.br
.ti -1c
.RI "\fBLocation\fP \fBgetEnPassantLoc\fP ()"
.br
.ti -1c
.RI "void \fBsetEnPassantLoc\fP (\fBLocation\fP epsnLoc)"
.br
.ti -1c
.RI "\fBThreefoldStatus\fP \fBgetThreefoldStatus\fP ()"
.br
.ti -1c
.RI "void \fBsetThreefoldStatus\fP (\fBThreefoldStatus\fP threefoldStatus)"
.br
.ti -1c
.RI "String \fBgetGameStatusStr\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBMove\fP \fBcastling\fP (\fBLocation\fP movingFrom, \fBLocation\fP movingTo, CastlingRights\&.Side side)"
.br
.ti -1c
.RI "static \fBMove\fP \fBthreefoldClaim\fP ()"
.br
.ti -1c
.RI "static \fBMove\fP \fBflipMove\fP (\fBMove\fP move)"
.br
.ti -1c
.RI "static \fBMove\fP \fBcopyMove\fP (\fBMove\fP move)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBMove\fP - represents a 'heavy' move\&. with a lot of info\&.
.PP
\fBAuthor\fP
.RS 4
Bezalel Avrahami (bezalel3250@gmail.com) 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.Move (\fBLocation\fP movingFrom, \fBLocation\fP movingTo, \fBPieceType\fP capturingPieceType)"
Instantiates a new \fBMove\fP\&.
.PP
\fBParameters\fP
.RS 4
\fImovingFrom\fP the moving from 
.br
\fImovingTo\fP the moving to 
.br
\fIcapturingPieceType\fP the capturing piece type 
.RE
.PP

.SS "ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.Move (\fBLocation\fP movingFrom, \fBLocation\fP movingTo)"
Instantiates a new \fBMove\fP\&.
.PP
\fBParameters\fP
.RS 4
\fImovingFrom\fP the moving from 
.br
\fImovingTo\fP the moving to 
.RE
.PP

.SS "ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.Move (\fBThreefoldStatus\fP threefoldStatus)"
Instantiates a new \fBMove\fP\&.
.PP
\fBParameters\fP
.RS 4
\fIthreefoldStatus\fP the threefold status 
.RE
.PP

.SS "ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.Move (\fBMove\fP other)"
Instantiates a new \fBMove\fP\&.
.PP
\fBParameters\fP
.RS 4
\fIother\fP the other 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "static \fBMove\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.castling (\fBLocation\fP movingFrom, \fBLocation\fP movingTo, CastlingRights\&.Side side)\fC [static]\fP"
creates a Castling move\&.
.PP
\fBParameters\fP
.RS 4
\fImovingFrom\fP the moving from 
.br
\fImovingTo\fP the moving to 
.br
\fIside\fP the castling side 
.RE
.PP
\fBReturns\fP
.RS 4
the move 
.RE
.PP

.SS "int ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.compareTo (\fBMove\fP o)"
Compare to another move\&.
.PP
\fBParameters\fP
.RS 4
\fIo\fP the other move 
.RE
.PP
\fBReturns\fP
.RS 4
the comparison result 
.RE
.PP

.SS "static \fBMove\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.copyMove (\fBMove\fP move)\fC [static]\fP"
Copy move\&.
.PP
\fBParameters\fP
.RS 4
\fImove\fP the move 
.RE
.PP
\fBReturns\fP
.RS 4
the move 
.RE
.PP

.SS "boolean ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.equals (Object o)"
Equals boolean\&.
.PP
\fBParameters\fP
.RS 4
\fIo\fP the o 
.RE
.PP
\fBReturns\fP
.RS 4
the boolean 
.RE
.PP

.PP
Reimplemented from \fBver14\&.SharedClasses\&.Game\&.Moves\&.BasicMove\fP\&.
.SS "static \fBMove\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.flipMove (\fBMove\fP move)\fC [static]\fP"
Flip move move\&.
.PP
\fBParameters\fP
.RS 4
\fImove\fP the move 
.RE
.PP
\fBReturns\fP
.RS 4
the move 
.RE
.PP

.SS "String ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getAnnotation ()"
Gets annotation\&.
.PP
\fBReturns\fP
.RS 4
the annotation 
.RE
.PP

.SS "\fBPieceType\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getCapturingPieceType ()"
Gets capturing piece type\&.
.PP
\fBReturns\fP
.RS 4
the capturing piece type 
.RE
.PP

.SS "\fBMovesList\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getCreatorList ()"
Gets creator list\&.
.PP
\fBReturns\fP
.RS 4
the creator list 
.RE
.PP

.SS "byte ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getDisabledCastling ()"
Gets disabled castling\&.
.PP
\fBReturns\fP
.RS 4
the disabled castling 
.RE
.PP

.SS "\fBLocation\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getEnPassantLoc ()"
Gets en passant loc\&.
.PP
\fBReturns\fP
.RS 4
the en passant loc 
.RE
.PP

.SS "\fBBasicMove\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getIntermediateMove ()"
Gets intermediate move\&.
.PP
\fBReturns\fP
.RS 4
the intermediate move 
.RE
.PP

.SS "\fBEvaluation\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getMoveEvaluation ()"
Gets move evaluation\&.
.PP
\fBReturns\fP
.RS 4
the move evaluation 
.RE
.PP

.SS "\fBMoveFlag\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getMoveFlag ()"
Gets move flag\&.
.PP
\fBReturns\fP
.RS 4
the move flag 
.RE
.PP

.SS "\fBPlayerColor\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getMovingColor ()"
Gets moving color\&.
.PP
\fBReturns\fP
.RS 4
the moving color 
.RE
.PP

.SS "int ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getPrevFullMoveClock ()"
Gets prev full move clock\&.
.PP
\fBReturns\fP
.RS 4
the prev full move clock 
.RE
.PP

.SS "int ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getPrevHalfMoveClock ()"
Gets prev half move clock\&.
.PP
\fBReturns\fP
.RS 4
the prev half move clock 
.RE
.PP

.SS "\fBPieceType\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.getPromotingTo ()"
Gets promoting to\&.
.PP
\fBReturns\fP
.RS 4
the promoting to 
.RE
.PP

.SS "boolean ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.isCapturing ()"
Is capturing boolean\&.
.PP
\fBReturns\fP
.RS 4
the boolean 
.RE
.PP

.SS "boolean ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.isCheck ()"
Is check boolean\&.
.PP
\fBReturns\fP
.RS 4
the boolean 
.RE
.PP

.SS "boolean ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.isReversible ()"
Is reversible boolean\&.
.PP
\fBReturns\fP
.RS 4
the boolean 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setCapturing (\fBPieceType\fP pieceType)"
Sets capturing\&.
.PP
\fBParameters\fP
.RS 4
\fIpieceType\fP the piece type 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setCreatorList (\fBMovesList\fP creatorList)"
Sets creator list\&.
.PP
\fBParameters\fP
.RS 4
\fIcreatorList\fP the creator list 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setDisabledCastling (byte disabledCastling)"
Sets disabled castling\&.
.PP
\fBParameters\fP
.RS 4
\fIdisabledCastling\fP the disabled castling 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setEnPassantLoc (\fBLocation\fP epsnLoc)"
Sets en passant loc\&.
.PP
\fBParameters\fP
.RS 4
\fIepsnLoc\fP the epsn loc 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setIntermediateMove (\fBBasicMove\fP intermediateMove)"
Sets intermediate move\&.
.PP
\fBParameters\fP
.RS 4
\fIintermediateMove\fP the intermediate move 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setMoveAnnotation (String moveAnnotation)"
Sets move annotation\&.
.PP
\fBParameters\fP
.RS 4
\fImoveAnnotation\fP the move annotation 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setMoveEvaluation (\fBEvaluation\fP moveEvaluation)"
Sets move evaluation\&.
.PP
\fBParameters\fP
.RS 4
\fImoveEvaluation\fP the move evaluation 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setMoveFlag (\fBMoveFlag\fP moveFlag)"
Sets move flag\&.
.PP
\fBParameters\fP
.RS 4
\fImoveFlag\fP the move flag 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setMovingColor (\fBPlayerColor\fP movingPlayerColor)"
Sets moving color\&.
.PP
\fBParameters\fP
.RS 4
\fImovingPlayerColor\fP the moving player color 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setPrevFullMoveClock (int prevFullMoveClock)"
Sets prev full move clock\&.
.PP
\fBParameters\fP
.RS 4
\fIprevFullMoveClock\fP the prev full move clock 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setPrevHalfMoveClock (int prevHalfMoveClock)"
Sets prev half move clock\&.
.PP
\fBParameters\fP
.RS 4
\fIprevHalfMoveClock\fP the prev half move clock 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setPromotingTo (\fBPieceType\fP promotingTo)"
Sets promoting to\&.
.PP
\fBParameters\fP
.RS 4
\fIpromotingTo\fP the promoting to 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setReversible (boolean reversible)"
Sets reversible\&.
.PP
\fBParameters\fP
.RS 4
\fIreversible\fP the reversible 
.RE
.PP

.SS "void ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.setThreefoldOption ()"
Sets threefold option\&. 
.SS "boolean ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.strictEquals (\fBMove\fP move)"
checks source and destination equals and move flags equals\&.
.PP
\fBParameters\fP
.RS 4
\fImove\fP the move 
.RE
.PP
\fBReturns\fP
.RS 4
the boolean 
.RE
.PP

.SS "static \fBMove\fP ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.threefoldClaim ()\fC [static]\fP"
Threefold claim move\&.
.PP
\fBReturns\fP
.RS 4
the move 
.RE
.PP

.SS "String ver14\&.SharedClasses\&.Game\&.Moves\&.Move\&.toString ()"
To string string\&.
.PP
\fBReturns\fP
.RS 4
the string 
.RE
.PP

.PP
Reimplemented from \fBver14\&.SharedClasses\&.Game\&.Moves\&.BasicMove\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
