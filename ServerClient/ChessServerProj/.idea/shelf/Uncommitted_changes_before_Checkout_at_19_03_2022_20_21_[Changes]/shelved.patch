Index: src/ver14/Server.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ver14;\r\n\r\nimport ver14.DB.DB;\r\nimport ver14.SharedClasses.Game.GameSettings;\r\nimport ver14.SharedClasses.Game.SavedGames.CreatedGame;\r\nimport ver14.SharedClasses.Game.SavedGames.GameInfo;\r\nimport ver14.SharedClasses.Game.SavedGames.UnfinishedGame;\r\nimport ver14.SharedClasses.IDsGenerator;\r\nimport ver14.SharedClasses.LoginInfo;\r\nimport ver14.SharedClasses.LoginType;\r\nimport ver14.SharedClasses.RegEx;\r\nimport ver14.SharedClasses.Sync.SyncableItem;\r\nimport ver14.SharedClasses.Sync.SyncedItems;\r\nimport ver14.SharedClasses.Sync.SyncedListType;\r\nimport ver14.SharedClasses.Threads.ErrorHandling.*;\r\nimport ver14.SharedClasses.Threads.ThreadsManager;\r\nimport ver14.SharedClasses.Utils.StrUtils;\r\nimport ver14.SharedClasses.messages.Message;\r\nimport ver14.SharedClasses.messages.MessageType;\r\nimport ver14.SharedClasses.networking.AppSocket;\r\nimport ver14.SharedClasses.networking.MyErrors;\r\nimport ver14.SharedClasses.ui.windows.CloseConfirmationJFrame;\r\nimport ver14.game.Game;\r\nimport ver14.game.GameSession;\r\nimport ver14.players.Player;\r\nimport ver14.players.PlayerAI.MinimaxVsStockfish;\r\nimport ver14.players.PlayerAI.PlayerAI;\r\nimport ver14.players.PlayerNet;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.KeyAdapter;\r\nimport java.awt.event.KeyEvent;\r\nimport java.io.IOException;\r\nimport java.net.InetAddress;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n\r\n/**\r\n * The type Server.\r\n */\r\npublic class Server implements ErrorContext, EnvManager {\r\n    /**\r\n     * The constant SERVER_WIN_TITLE.\r\n     */\r\n    public static final String SERVER_WIN_TITLE = \"Chat Server\";\r\n    /**\r\n     * The constant SERVER_LOG_FONT.\r\n     */\r\n    public static final Font SERVER_LOG_FONT = new Font(\"Consolas\", Font.PLAIN, 16); // Font.MONOSPACED\r\n    // constants\r\n    private static final int SERVER_DEFAULT_PORT = 1234;\r\n    private static final Dimension SERVER_WIN_SIZE = new Dimension(580, 400);\r\n    private static final Color SERVER_LOG_BGCOLOR = Color.BLACK;\r\n    private static final Color SERVER_LOG_FGCOLOR = Color.GREEN;\r\n    private final static IDsGenerator gameIDGenerator;\r\n    /**\r\n     * The constant VS_STOCKFISH.\r\n     */\r\n    public static boolean VS_STOCKFISH = false;\r\n\r\n    static {\r\n\r\n        gameIDGenerator = new IDsGenerator() {\r\n            @Override\r\n            public boolean canUseId(String id) {\r\n                if (!super.canUseId(id))\r\n                    return false;\r\n                return !DB.isGameIdExists(id);\r\n            }\r\n        };\r\n    }\r\n\r\n    private SyncedItems<PlayerNet> players;\r\n    private SyncedItems<GameSession> gameSessions;\r\n    private SyncedItems<GameInfo> gamePool;\r\n    private ArrayList<SyncedItems<?>> syncedLists;\r\n    private CloseConfirmationJFrame frmWin;\r\n    private JTextArea areaLog;\r\n    private String serverIP;\r\n    private int serverPort;\r\n    private boolean serverSetupOK, serverRunOK;\r\n    private MyServerSocket serverSocket;\r\n    private int autoChatterID;\r\n\r\n    /**\r\n     * Constructor for ChatServer.\r\n     */\r\n    public Server() {\r\n        ErrorManager.setEnvManager(this);\r\n        ThreadsManager.handleErrors(() -> {\r\n            createServerGUI();\r\n            setupServer();\r\n        });\r\n\r\n    }\r\n\r\n    // create server GUI\r\n    private void createServerGUI() {\r\n        frmWin = new CloseConfirmationJFrame(this::exitServer) {{\r\n            setSize(SERVER_WIN_SIZE);\r\n            setAlwaysOnTop(true);\r\n            setTitle(SERVER_WIN_TITLE);\r\n        }};\r\n\r\n        // create displayArea\r\n        areaLog = new JTextArea() {{\r\n            setEditable(false);\r\n            setFont(SERVER_LOG_FONT);\r\n            setMargin(new Insets(5, 5, 5, 5));\r\n            setBackground(SERVER_LOG_BGCOLOR);\r\n            setForeground(SERVER_LOG_FGCOLOR);\r\n            addKeyListener(new KeyAdapter() {\r\n                @Override\r\n                public void keyPressed(KeyEvent e) {\r\n                    if (e.getKeyCode() == KeyEvent.VK_PAGE_UP) {\r\n                        Font font = areaLog.getFont();\r\n                        Font biggerFont = new Font(font.getFamily(), font.getStyle(), font.getSize() + 1);\r\n                        areaLog.setFont(biggerFont);\r\n                    }\r\n                    if (e.getKeyCode() == KeyEvent.VK_PAGE_DOWN) {\r\n                        Font font = areaLog.getFont();\r\n                        Font smallerFont = new Font(font.getFamily(), font.getStyle(), font.getSize() - 1);\r\n                        areaLog.setFont(smallerFont);\r\n                    }\r\n                }\r\n            });\r\n        }};\r\n        // panel for send message\r\n        frmWin.add(new JScrollPane(areaLog), BorderLayout.CENTER);\r\n\r\n        // show window\r\n        frmWin.setLocationRelativeTo(null);\r\n        frmWin.setVisible(true);\r\n    }\r\n\r\n    // setup Server Address(IP&Port) and create the ServerSocket\r\n    private void setupServer() {\r\n        try {\r\n            autoChatterID = 0;\r\n            players = new SyncedItems<>(SyncedListType.CONNECTED_USERS, this::syncedListUpdated);\r\n            gamePool = new SyncedItems<>(SyncedListType.JOINABLE_GAMES, this::syncedListUpdated);\r\n            gameSessions = new SyncedItems<>(SyncedListType.ONGOING_GAMES, this::syncedListUpdated);\r\n\r\n            this.syncedLists = new ArrayList<>() {{\r\n                add(players);\r\n                add(gamePool);\r\n                add(gameSessions);\r\n            }};\r\n            serverPort = -1;\r\n            serverIP = InetAddress.getLocalHost().getHostAddress(); // get Computer IP\r\n\r\n            String port = JOptionPane.showInputDialog(frmWin, \"Enter Server PORT Number:\", SERVER_DEFAULT_PORT);\r\n\r\n            if (port == null) // check if Cancel button was pressed\r\n                serverPort = -1;\r\n            else\r\n                serverPort = Integer.parseInt(port);\r\n\r\n            // Setup Server Socket ...\r\n            serverSocket = new MyServerSocket(serverPort);\r\n\r\n            serverSetupOK = true;\r\n        } catch (Exception exp) {\r\n            serverSetupOK = false;\r\n            String serverAddress = serverIP + \":\" + serverPort;\r\n            log(\"Can't setup Server Socket on \" + serverAddress + \"\\n\" + \"Fix the problem & restart the server.\", exp, frmWin);\r\n        }\r\n\r\n        System.out.println(\"**** setupServer() finished! ****\");\r\n    }\r\n\r\n\r\n    private void exitServer() {\r\n        closeServer(\"\");\r\n    }\r\n\r\n    /**\r\n     * Synced list updated.\r\n     *\r\n     * @param list the list\r\n     */\r\n    public void syncedListUpdated(SyncedItems<?> list) {\r\n        list = prepareListForSend(list);\r\n        if (list.isEmpty())\r\n            return;\r\n        SyncedItems<?> finalList = list;\r\n        players.forEachItem(playerNet -> playerNet.getSocketToClient().writeMessage(Message.syncLists(finalList)));\r\n    }\r\n\r\n    /**\r\n     * Log.\r\n     *\r\n     * @param msg the msg\r\n     * @param ex  the ex\r\n     * @param win the win\r\n     */\r\n    public static void log(String msg, Exception ex, JFrame... win) {\r\n        String title = \"Runtime Exception: \" + msg;\r\n\r\n        System.out.println(\"\\n>> \" + title);\r\n        System.out.println(\">> \" + new String(new char[title.length()]).replace('\\0', '-'));\r\n\r\n        String errMsg = \">> \" + ex.toString() + \"\\n\";\r\n        for (StackTraceElement element : ex.getStackTrace())\r\n            errMsg += \">>> \" + element + \"\\n\";\r\n        System.out.println(errMsg);\r\n\r\n        if (win.length != 0) {\r\n            // bring the window into front (DeIconified)\r\n            win[0].setVisible(true);\r\n            win[0].toFront();\r\n            win[0].setState(JFrame.NORMAL);\r\n\r\n            // popup dialog with the error message\r\n            JOptionPane.showMessageDialog(win[0], msg + \"\\n\\n\" + errMsg, \"Exception Error\", JOptionPane.ERROR_MESSAGE);\r\n        }\r\n    }\r\n\r\n    private void closeServer(String cause) {\r\n        if (serverSocket != null && !serverSocket.isClosed())\r\n            stopServer();\r\n\r\n        log(\"Server Closed!\");\r\n        serverRunOK = false;\r\n        frmWin.dispose(); // close GUI\r\n    }\r\n\r\n    //todo move to synceditems as a func\r\n    private SyncedItems<?> prepareListForSend(SyncedItems<?> list) {\r\n        SyncedItems<?> ret = new SyncedItems<>(list.syncedListType);\r\n        ret.addAll(list.stream().map(SyncableItem::getSyncableItem).collect(Collectors.toList()));\r\n        return ret.clean();\r\n    }\r\n\r\n    private void stopServer() {\r\n        try {\r\n            // This will throw cause an Exception on serverSocket.accept() in waitForClient() method\r\n            serverSocket.close();\r\n\r\n            // close all threads & clients\r\n            players.forEachItem(netPlayer -> (netPlayer).disconnect(\"Server Closing\"));\r\n\r\n            log(\"Server Stopped!\");\r\n        } catch (IOException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Log.\r\n     *\r\n     * @param msg the msg\r\n     */\r\n    public void log(String msg) {\r\n        msg = StrUtils.format(msg);\r\n        areaLog.append(msg + \"\\n\");\r\n        areaLog.setCaretPosition(areaLog.getDocument().getLength());\r\n        System.out.println(msg);\r\n    }\r\n\r\n    /**\r\n     * The entry point of the application.\r\n     *\r\n     * @param args the input arguments\r\n     */\r\n// main\r\n    public static void main(String[] args) {\r\n        Server chatServer = new Server();\r\n        chatServer.runServer();\r\n\r\n        System.out.println(\"**** ChatServer main() finished! ****\");\r\n    }\r\n\r\n    private void sendAllSyncedLists(PlayerNet player, SyncedItems<?>... excludeLists) {\r\n        ArrayList<SyncedItems<?>> lists = new ArrayList<>();\r\n        for (SyncedItems<?> syncedList : syncedLists) {\r\n            if (Arrays.stream(excludeLists).noneMatch(excludedList -> excludedList.equals(syncedList)))\r\n                lists.add(prepareListForSend(syncedList));\r\n        }\r\n        player.getSocketToClient().writeMessage(Message.syncLists(lists.toArray(new SyncedItems[0])));\r\n    }\r\n\r\n    /**\r\n     * Run server.\r\n     */\r\n// Run the server - wait for clients to connect & handle them\r\n    public void runServer() {\r\n        if (serverSetupOK) {\r\n            ThreadsManager.handleErrors(() -> {\r\n                String serverAddress = \"(\" + serverIP + \":\" + serverPort + \")\";\r\n                log(\"SERVER\" + serverAddress + \" Setup & Running!\");\r\n//            log(new NoThrow<String>(DB::getAllUsersCredentials).get());\r\n                frmWin.setTitle(SERVER_WIN_TITLE + \" \" + serverAddress);\r\n\r\n                serverRunOK = true;\r\n\r\n                if (VS_STOCKFISH)\r\n                    minimaxVsStockfish();\r\n\r\n                // loop while server running OK\r\n                while (serverRunOK) {\r\n                    AppSocket appSocketToPlayer = serverSocket.acceptAppSocket();\r\n                    if (appSocketToPlayer == null)\r\n                        serverRunOK = false;\r\n                    else {\r\n                        handleClient(appSocketToPlayer);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        closeServer(\"runServer() finised!\");\r\n\r\n        System.out.println(\"**** runServer() finished! ****\");\r\n    }\r\n\r\n    // handle client in a separate thread\r\n    private void handleClient(AppSocket playerSocket) {\r\n        ThreadsManager.HandledThread.run(() -> {\r\n            ServerMessagesHandler messagesHandler = new ServerMessagesHandler(this, playerSocket);\r\n            playerSocket.setMessagesHandler(messagesHandler);\r\n            playerSocket.start();\r\n            PlayerNet player = login(playerSocket);\r\n            if (player == null) {\r\n                playerSocket.stopReading();\r\n                return;\r\n            }\r\n\r\n            messagesHandler.setPlayer(player);\r\n            players.add(player);\r\n\r\n            sendAllSyncedLists(player, players);\r\n\r\n            log(\"Client(\" + playerSocket.getRemoteAddress() + \") Connected as \" + player.getLoginInfo().getUsername());\r\n\r\n            gameSetup(player);\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Login player net.\r\n     *\r\n     * @param appSocket the app socket\r\n     * @return the player net\r\n     */\r\n    public PlayerNet login(AppSocket appSocket) {\r\n        Message request = appSocket.requestMessage(Message.askForLogin());\r\n        Message responseMessage = responseToLogin(request.getLoginInfo());\r\n        if (responseMessage == null)\r\n            return null;\r\n        while (responseMessage.getMessageType() == MessageType.ERROR) {\r\n            responseMessage.setRespondingTo(request);\r\n            request = appSocket.requestMessage(responseMessage);\r\n            responseMessage = responseToLogin(request.getLoginInfo());\r\n            if (responseMessage == null)\r\n                return null;\r\n        }\r\n\r\n        appSocket.respond(responseMessage, request);\r\n\r\n        LoginInfo loginInfo = request.getLoginInfo();\r\n\r\n        if (loginInfo.getLoginType() == LoginType.CANCEL)\r\n            return null;\r\n\r\n        if (responseMessage.getMessageType() != MessageType.ERROR) {\r\n            return new PlayerNet(appSocket, loginInfo, loginInfo.getUsername());\r\n        }\r\n        return login(appSocket);\r\n    }\r\n\r\n    private Message responseToLogin(LoginInfo loginInfo) {\r\n        if (loginInfo == null)\r\n            return null;\r\n        String username = loginInfo.getUsername();\r\n        String password = loginInfo.getPassword();\r\n\r\n        return switch (loginInfo.getLoginType()) {\r\n            case LOGIN -> {\r\n                if (DB.isUserExists(username, password)) {\r\n                    if (!isUserConnected(username)) {\r\n                        yield Message.welcomeMessage(\"Welcome \" + username, loginInfo);\r\n                    } else {\r\n                        yield Message.error(\"User already connected\");\r\n                    }\r\n                } else {\r\n                    yield Message.error(\"Wrong username or password\");\r\n                }\r\n            }\r\n            case GUEST -> {\r\n                loginInfo.setUsername(RegEx.Prefixes.GUEST_PREFIX + \"#\" + autoChatterID++);\r\n                yield Message.welcomeMessage(\"Welcome \" + loginInfo.getUsername(), loginInfo);\r\n            }\r\n            case CANCEL -> Message.bye(\"\");\r\n            case REGISTER -> {\r\n                if (DB.isUsernameExists(username)) {\r\n                    yield Message.error(\"Username Exists Already\");\r\n                } else {\r\n                    DB.addUser(username, password);\r\n                    yield Message.welcomeMessage(\"Welcome \" + username, loginInfo);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    private boolean isUserConnected(String username) {\r\n        return players.stream().anyMatch(p -> p.getUsername().equals(username));\r\n    }\r\n\r\n    /**\r\n     * Disconnect player.\r\n     *\r\n     * @param player the player\r\n     * @param err    the err\r\n     */\r\n    public void disconnectPlayer(Player player, MyErrors err) {\r\n        disconnectPlayer(player, \"error occurred. \" + err);\r\n    }\r\n\r\n    /**\r\n     * Disconnect player.\r\n     *\r\n     * @param player the player\r\n     * @param cause  the cause\r\n     */\r\n    public void disconnectPlayer(Player player, String cause) {\r\n        if (player != null) {\r\n            log(\"disconnecting \" + player.getUsername() + \" \" + cause);\r\n            player.disconnect(cause);\r\n            playerDisconnected(player);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Player disconnected.\r\n     *\r\n     * @param player the player\r\n     */\r\n    public void playerDisconnected(Player player) {\r\n        Game ongoingGame = player.getOnGoingGame();\r\n        if (ongoingGame != null) {\r\n            ongoingGame.playerDisconnected(player);\r\n        }\r\n        if (player instanceof PlayerNet) {\r\n            players.remove(((PlayerNet) player).ID());\r\n        }\r\n        List<GameInfo> del = gamePool.values()\r\n                .stream()\r\n                .filter(game -> game.creatorUsername.equals(player.getUsername()))\r\n                .toList();\r\n        del.forEach(deleting -> gamePool.remove((deleting).gameId));\r\n    }\r\n\r\n    /**\r\n     * End of game session.\r\n     *\r\n     * @param session            the session\r\n     * @param disconnectedPlayer the disconnected player\r\n     */\r\n    public void endOfGameSession(GameSession session, Player disconnectedPlayer) {\r\n        gameSessions.remove(session.gameID);\r\n        Arrays.stream(session.getPlayers()).parallel().forEach(player -> {\r\n            if (player != disconnectedPlayer && player.isConnected()) {\r\n                gameSetup(player);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Game setup.\r\n     *\r\n     * @param player the player\r\n     */\r\n    public void gameSetup(Player player) {\r\n\r\n        SyncedItems<GameInfo> joinable = getJoinableGames(player);\r\n        SyncedItems<GameInfo> resumable = getResumableGames(player);\r\n\r\n        GameSettings gameSettings = player.getGameSettings(joinable, resumable);\r\n        if (gameSettings == null) {\r\n            disconnectPlayer(player);\r\n            return;\r\n        }\r\n        switch (gameSettings.getGameType()) {\r\n            case CREATE_NEW -> {\r\n                if (gameSettings.isVsAi()) {\r\n                    startGameVsAi(player, gameSettings);\r\n                } else {\r\n                    String id = gameIDGenerator.generate();\r\n                    CreatedGame gameInfo = new CreatedGame(id, player.getUsername(), gameSettings);\r\n                    gamePool.put(id, gameInfo);\r\n                    player.waitForMatch();\r\n                }\r\n            }\r\n            case JOIN_EXISTING -> {\r\n                GameInfo gameInfo = gamePool.get(gameSettings.getGameID());\r\n                if (gameInfo == null) {\r\n                    throw new Error(\"user should get an error\");\r\n                } else {\r\n                    GameSession gameSession = new GameSession(gameInfo, getPlayerNet(gameInfo.creatorUsername), player, this);\r\n                    gameSession.start();\r\n                    gameSessions.add(gameSession);\r\n                    gamePool.remove(gameSettings.getGameID());\r\n                }\r\n            }\r\n            case RESUME -> {\r\n                startGameVsAi(player, gameSettings);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets joinable games.\r\n     *\r\n     * @param player the player net\r\n     * @return the joinable games\r\n     */\r\n    public SyncedItems<GameInfo> getJoinableGames(Player player) {\r\n\r\n        return gamePool.clean();\r\n    }\r\n\r\n    /**\r\n     * Gets resumable games.\r\n     *\r\n     * @param player the player\r\n     * @return the resumable games\r\n     */\r\n    public SyncedItems<GameInfo> getResumableGames(Player player) {\r\n        return DB.getUnfinishedGames(player.getUsername()).clean();\r\n    }\r\n\r\n    /**\r\n     * Disconnects player.\r\n     *\r\n     * @param player the player to disconnect\r\n     */\r\n    public void disconnectPlayer(Player player) {\r\n        disconnectPlayer(player, \"\");\r\n    }\r\n\r\n    private void startGameVsAi(Player player, GameSettings gameSettings) {\r\n        GameSession gameSession;\r\n        if (gameSettings.getGameType() == GameSettings.GameType.CREATE_NEW) {\r\n            PlayerAI ai = PlayerAI.createPlayerAi(gameSettings.getAiParameters());\r\n            gameSession = new GameSession(gameIDGenerator.generate(), player, ai, gameSettings, this);\r\n        } else {\r\n            String resumingId = gameSettings.getGameID();\r\n            UnfinishedGame resumingGame = DB.loadUnfinishedGame(resumingId);\r\n            DB.deleteUnfinishedGame(resumingGame);\r\n            PlayerAI ai = PlayerAI.createPlayerAi(resumingGame.gameSettings.getAiParameters());\r\n            gameSession = new GameSession(resumingGame, player, ai, this);\r\n        }\r\n        gameSessions.add(gameSession);\r\n        gameSession.start();\r\n    }\r\n\r\n    private PlayerNet getPlayerNet(String username) {\r\n        return players.stream()\r\n                .filter(p -> (p).getUsername().equals(username))\r\n                .findAny()\r\n                .orElse(null);\r\n    }\r\n\r\n    /**\r\n     * Minimax vs stockfish.\r\n     */\r\n//DEBUG ONLY\r\n    public void minimaxVsStockfish() {\r\n        MinimaxVsStockfish p = new MinimaxVsStockfish(1);\r\n        gameSetup(p);\r\n    }\r\n\r\n    /**\r\n     * Create username suggestions array list.\r\n     *\r\n     * @param username the username\r\n     * @return the array list\r\n     */\r\n    public ArrayList<String> createUsernameSuggestions(String username) {\r\n\r\n        return UsernameSuggestions.createSuggestions(username);\r\n    }\r\n\r\n    /**\r\n     * Context type my error . context type.\r\n     *\r\n     * @return the my error . context type\r\n     */\r\n    @Override\r\n    public ContextType contextType() {\r\n        return null;\r\n//        return MyError.ContextType.Server;\r\n    }\r\n\r\n    /**\r\n     * Handled err.\r\n     *\r\n     * @param err the err\r\n     */\r\n    @Override\r\n    public void handledErr(MyError err) {\r\n        log(\"handled: \" + err);\r\n\r\n    }\r\n\r\n    /**\r\n     * Critical err.\r\n     *\r\n     * @param err the err\r\n     */\r\n    @Override\r\n    public void criticalErr(MyError err) {\r\n        log(\"ahhhhhh: \" + err);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ver14/Server.java b/src/ver14/Server.java
--- a/src/ver14/Server.java	
+++ b/src/ver14/Server.java	
@@ -57,10 +57,6 @@
     private static final Color SERVER_LOG_BGCOLOR = Color.BLACK;
     private static final Color SERVER_LOG_FGCOLOR = Color.GREEN;
     private final static IDsGenerator gameIDGenerator;
-    /**
-     * The constant VS_STOCKFISH.
-     */
-    public static boolean VS_STOCKFISH = false;
 
     static {
 
@@ -298,9 +294,6 @@
 
                 serverRunOK = true;
 
-                if (VS_STOCKFISH)
-                    minimaxVsStockfish();
-
                 // loop while server running OK
                 while (serverRunOK) {
                     AppSocket appSocketToPlayer = serverSocket.acceptAppSocket();
@@ -338,7 +331,6 @@
             log("Client(" + playerSocket.getRemoteAddress() + ") Connected as " + player.getLoginInfo().getUsername());
 
             gameSetup(player);
-
         });
     }
 
Index: ../ChessClientProj/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"ChessClientProj:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d2b132dc-6d84-44dd-b331-6216fc04c4e9\" name=\"Changes\" comment=\"created message dialogs&#10;error handling\">\r\n      <change afterPath=\"$PROJECT_DIR$/../ChessServerProj/.idea/scopes/MyScope.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ContextType.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorType.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/Client.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/Client.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/view/Board/BoardOverlay.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/view/Board/BoardOverlay.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/view/Board/ViewLocation.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/view/Board/ViewLocation.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/.idea/copyright/profiles_settings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/.idea/copyright/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/.idea/scopes/Unnamed.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/Model/Model.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/Model/Model.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/MyServerSocket.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/MyServerSocket.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/Server.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/Server.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ThreadsManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ThreadsManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/networking/AppSocket.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/networking/AppSocket.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FormatOnSaveOptions\">\r\n    <option name=\"myRunOnSave\" value=\"true\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/../..\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/view/Dialog/Dialog.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/view/View.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/view/IconManager.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver4/Client.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/view/Board/BoardButton.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/view/Board/BoardPanel.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/view/GameIconsGenerator.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"NamedScopeManager\">\r\n    <scope name=\"Unnamed\" pattern=\"src:*..*\" />\r\n  </component>\r\n  <component name=\"OptimizeOnSaveOptions\">\r\n    <option name=\"myRunOnSave\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"20lvZL7Nm4unxYEn90rC60tfmw0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last.edited.regexp\" value=\"AAa\" />\r\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/src/ver8/view\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"rearrange.code.on.save\" value=\"true\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"JavaDoc\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"ver8.view.Dialog\" />\r\n      <recent name=\"ver6.view.List\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\SharedCo\\Chess\\ServerClient\\ChessClientProj\\src\\ver14\" />\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\Chess\\ServerClient\\ChessClientProj\\src\\ver13\" />\r\n      <recent name=\"E:\\SharedCo\\Chess\\ServerClient\\ChessClientProj\\src\\ver12\" />\r\n      <recent name=\"E:\\SharedCo\\Chess\\ServerClient\\ChessClientProj\\src\\ver11\" />\r\n      <recent name=\"E:\\SharedCo\\IdeaProjects\\ChessClientProj\\src\\ver10\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\SharedCo\\IdeaProjects\\ChessClientProj\\src\\assets\\Statistics\\StatisticsIcon\" />\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\SharedCo\\IdeaProjects\\ChessClientProj\\src\\assets\\SettingsIcon\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"ver7.view\" />\r\n      <recent name=\"ver5.view.game_select\" />\r\n    </key>\r\n    <key name=\"MoveInnerDialog.RECENTS_KEY\">\r\n      <recent name=\"ver12.SharedClasses.DBActions\" />\r\n      <recent name=\"ver10.SharedClasses.DBActions\" />\r\n      <recent name=\"ver10.view.Dialog\" />\r\n      <recent name=\"ver10.view.IconManager\" />\r\n      <recent name=\"ver10.view.SidePanel\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"ver8.view.Dialog.Selectables\" />\r\n      <recent name=\"ver3.view\" />\r\n      <recent name=\"SharedClasses.messages\" />\r\n      <recent name=\"ver2login\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Client\">\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver10.Client\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver10.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver13.Client\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver13.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" singleton=\"false\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver12.Client\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"InputDialog\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.view.Dialog.Dialogs.SimpleDialogs.InputDialog\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.view.Dialog.Dialogs.SimpleDialogs.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LinkLabel\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.SharedClasses.ui.LinkLabel\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.SharedClasses.ui.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MessageDialog\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.view.Dialog.Dialogs.SimpleDialogs.MessageDialog\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.view.Dialog.Dialogs.SimpleDialogs.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RequestBuilder\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.SharedClasses.DBActions.RequestBuilder\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.SharedClasses.DBActions.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TextWrapPnl\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.view.TextWrapPnl\" />\r\n      <module name=\"ChessClientProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.view.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Client\" />\r\n      <item itemvalue=\"Application.RequestBuilder\" />\r\n      <item itemvalue=\"Application.InputDialog\" />\r\n      <item itemvalue=\"Application.MessageDialog\" />\r\n      <item itemvalue=\"Application.TextWrapPnl\" />\r\n      <item itemvalue=\"Application.LinkLabel\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.LinkLabel\" />\r\n        <item itemvalue=\"Application.MessageDialog\" />\r\n        <item itemvalue=\"Application.TextWrapPnl\" />\r\n        <item itemvalue=\"Application.InputDialog\" />\r\n        <item itemvalue=\"Application.RequestBuilder\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d2b132dc-6d84-44dd-b331-6216fc04c4e9\" name=\"Changes\" comment=\"\" />\r\n      <created>1636632044717</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1636632044717</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00001\" summary=\"created message dialogs\">\r\n      <created>1647575755850</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00001\" />\r\n      <updated>1647575755850</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00002\" summary=\"created message dialogs\">\r\n      <created>1647576017130</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00002\" />\r\n      <updated>1647576017130</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"moved dialogs to view\" />\r\n    <MESSAGE value=\"created message dialogs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"created message dialogs\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ClassNotFoundException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"5\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.AssertionError\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"13\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ArrayIndexOutOfBoundsException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"26\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalArgumentException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"27\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.StringIndexOutOfBoundsException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"38\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IndexOutOfBoundsException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"46\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalStateException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"56\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ClassCastException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"63\" />\r\n        </breakpoint>\r\n        <breakpoint type=\"java-exception\">\r\n          <properties class=\"java.net.SocketException\" package=\"java.net\" />\r\n          <option name=\"timeStamp\" value=\"64\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.io.InvalidClassException\" package=\"java.io\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"65\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.io.NotSerializableException\" package=\"java.io\" />\r\n          <option name=\"timeStamp\" value=\"68\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.ConcurrentModificationException\" package=\"java.util\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"73\" />\r\n        </breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/ver7/view/View.java</url>\r\n          <line>295</line>\r\n          <option name=\"timeStamp\" value=\"57\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n      <default-breakpoints>\r\n        <breakpoint type=\"java-exception\">\r\n          <properties>\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n        </breakpoint>\r\n      </default-breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"((JButton)e.getSource()).actionListener\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../ChessClientProj/.idea/workspace.xml b/../ChessClientProj/.idea/workspace.xml
--- a/../ChessClientProj/.idea/workspace.xml	
+++ b/../ChessClientProj/.idea/workspace.xml	
@@ -7,25 +7,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d2b132dc-6d84-44dd-b331-6216fc04c4e9" name="Changes" comment="created message dialogs&#10;error handling">
-      <change afterPath="$PROJECT_DIR$/../ChessServerProj/.idea/scopes/MyScope.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ContextType.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorType.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/Client.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/Client.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/view/Board/BoardOverlay.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/view/Board/BoardOverlay.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/view/Board/ViewLocation.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/view/Board/ViewLocation.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/.idea/copyright/profiles_settings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/.idea/copyright/profiles_settings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/.idea/scopes/Unnamed.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/../ChessServerProj/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/Model/Model.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/Model/Model.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/MyServerSocket.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/MyServerSocket.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/Server.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/ServerMessagesHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/ServerMessagesHandler.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ThreadsManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/Threads/ThreadsManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/networking/AppSocket.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/SharedClasses/networking/AppSocket.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/Tests/Tests.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/Tests/Tests.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../ChessServerProj/src/ver14/UsernameSuggestions.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessServerProj/src/ver14/UsernameSuggestions.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: src/ver14/ServerMessagesHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ver14;\r\n\r\nimport ver14.DB.DB;\r\nimport ver14.SharedClasses.Callbacks.MessageCallback;\r\nimport ver14.SharedClasses.messages.Message;\r\nimport ver14.SharedClasses.networking.AppSocket;\r\nimport ver14.SharedClasses.networking.MessagesHandler;\r\nimport ver14.game.Game;\r\nimport ver14.game.GameSession;\r\nimport ver14.players.PlayerNet;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * The type Server messages handler.\r\n */\r\npublic class ServerMessagesHandler extends MessagesHandler {\r\n    private final Server server;\r\n    private PlayerNet player = null;\r\n\r\n    /**\r\n     * Instantiates a new Server messages handler.\r\n     *\r\n     * @param server    the server\r\n     * @param appSocket the app socket\r\n     */\r\n    public ServerMessagesHandler(Server server, AppSocket appSocket) {\r\n        super(appSocket);\r\n        this.server = server;\r\n    }\r\n\r\n    /**\r\n     * Sets player.\r\n     *\r\n     * @param playerNet the player net\r\n     */\r\n    public void setPlayer(PlayerNet playerNet) {\r\n        this.player = playerNet;\r\n    }\r\n\r\n    /**\r\n     * On disconnected.\r\n     */\r\n    @Override\r\n    public void onDisconnected() {\r\n        super.onDisconnected();\r\n        server.playerDisconnected(player);\r\n    }\r\n\r\n    /**\r\n     * On resign message callback.\r\n     *\r\n     * @return the message callback\r\n     */\r\n    @Override\r\n    public MessageCallback onResign() {\r\n        return message -> {\r\n            super.onResign().onMsg(message);\r\n            player.getOnGoingGame().resigned(player);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * On offer draw message callback.\r\n     *\r\n     * @return the message callback\r\n     */\r\n    @Override\r\n    public MessageCallback onOfferDraw() {\r\n        return message -> {\r\n            super.onOfferDraw().onMsg(message);\r\n            if (player != null) {\r\n                Game game = player.getOnGoingGame();\r\n                if (game != null) {\r\n                    game.drawOffered(player);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * On bye message callback.\r\n     *\r\n     * @return the message callback\r\n     */\r\n    @Override\r\n    public MessageCallback onBye() {\r\n        return message -> {\r\n            super.onBye().onMsg(message);\r\n\r\n            String response = \"bye\";\r\n            if (player != null) {\r\n                response += \" \" + player.getUsername();\r\n\r\n                GameSession gameSession = player.getGameSession();\r\n                if (gameSession != null) {\r\n                    //todo smn\r\n                    Game game = player.getOnGoingGame();\r\n                    if (game != null) {\r\n//                        response += \" saving game\";\r\n                        game.playerDisconnected(player);\r\n                    }\r\n                }\r\n            }\r\n            socket.respond(Message.bye(response), message);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * On username availability message callback.\r\n     *\r\n     * @return the message callback\r\n     */\r\n    @Override\r\n    public MessageCallback onUsernameAvailability() {\r\n        return message -> {\r\n            super.onUsernameAvailability().onMsg(message);\r\n\r\n            boolean res = !DB.isUsernameExists(message.getUsername());\r\n            if (res) {\r\n                socket.writeMessage(Message.returnUsernameAvailable(message));\r\n            } else {\r\n                ArrayList<String> suggestions = server.createUsernameSuggestions(message.getUsername());\r\n                socket.writeMessage(Message.returnUsernameNotAvailable(suggestions, message));\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n    /**\r\n     * On db request message callback.\r\n     *\r\n     * @return the message callback\r\n     */\r\n    @Override\r\n    public MessageCallback onDBRequest() {\r\n        return message -> {\r\n            super.onDBRequest().onMsg(message);\r\n            socket.writeMessage(Message.returnDBResponse(DB.request(message.getDBRequest()), message));\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ver14/ServerMessagesHandler.java b/src/ver14/ServerMessagesHandler.java
--- a/src/ver14/ServerMessagesHandler.java	
+++ b/src/ver14/ServerMessagesHandler.java	
@@ -116,8 +116,8 @@
         return message -> {
             super.onUsernameAvailability().onMsg(message);
 
-            boolean res = !DB.isUsernameExists(message.getUsername());
-            if (res) {
+            boolean exists = !DB.isUsernameExists(message.getUsername());
+            if (exists) {
                 socket.writeMessage(Message.returnUsernameAvailable(message));
             } else {
                 ArrayList<String> suggestions = server.createUsernameSuggestions(message.getUsername());
Index: src/ver14/Tests/Tests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ver14.Tests;\r\n\r\nimport org.testng.Assert;\r\nimport org.testng.annotations.Test;\r\nimport ver14.Model.*;\r\nimport ver14.Model.Eval.Eval;\r\nimport ver14.Model.MoveGenerator.MoveGenerator;\r\nimport ver14.Model.minimax.Minimax;\r\nimport ver14.Server;\r\nimport ver14.SharedClasses.Game.Location;\r\nimport ver14.SharedClasses.Game.PlayerColor;\r\nimport ver14.SharedClasses.Game.evaluation.Evaluation;\r\nimport ver14.SharedClasses.Game.moves.Move;\r\nimport ver14.SharedClasses.Game.moves.MovesList;\r\nimport ver14.SharedClasses.Game.pieces.PieceType;\r\nimport ver14.ThreadsUtil;\r\nimport ver14.game.Game;\r\n\r\nimport java.time.ZonedDateTime;\r\nimport java.time.temporal.ChronoUnit;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Random;\r\nimport java.util.concurrent.ForkJoinPool;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.concurrent.atomic.AtomicLong;\r\nimport java.util.stream.IntStream;\r\n\r\n@Test\r\npublic class Tests {\r\n    private static final int POSITIONS_COUNT_DEPTH = 6;\r\n    private static final boolean PRINT_POSITIONS_MOVES = false;\r\n    private static final boolean MULTITHREADING_POS = true;\r\n    private static final int numOfThreads = ThreadsUtil.NUM_OF_THREADS;\r\n    private static ZonedDateTime dateTime;\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        minimaxVsStockfish();\r\n//        MoveGenerator.generateMoves(model()).prettyPrint();\r\n    }\r\n\r\n    private static void minimaxVsStockfish() {\r\n        Server server = new Server();\r\n        Server.VS_STOCKFISH = true;\r\n        Game.showGameView = true;\r\n        server.runServer();\r\n    }\r\n\r\n    private static void minimaxThreadsTest() {\r\n        minimaxThreadsTest(10);\r\n    }\r\n\r\n    private static void minimaxThreadsTest(int time) {\r\n        Minimax minimax = new Minimax(null, time);\r\n        minimax.setRecordCpuUsage(true);\r\n        minimax.setLog(false);\r\n        for (int threads = 1; threads <= numOfThreads; threads++) {\r\n            Model model = new Model();\r\n            model.setup(null);\r\n            minimax.setModel(model);\r\n            minimax.setNumOfThreads(threads);\r\n            Move move = minimax.getBestMove();\r\n\r\n            Minimax.CpuUsages cpuUsage = minimax.getCpuUsageRecords();\r\n            ArrayList<Double> usages = cpuUsage.getUsages();\r\n            Collections.sort(usages);\r\n            Collections.reverse(usages);\r\n            assert usages.size() > 0;\r\n            double avg = usages.stream().reduce(0.0, Double::sum) / usages.size();\r\n            double max = usages.get(0);\r\n            double padding = 15;\r\n            int index = 0;\r\n            int numOfMatchesForConsistent = 2;\r\n            int numFound = 0;\r\n            double consistentMax = -1;\r\n            while (index + 1 < usages.size() - 1) {\r\n                double checking = usages.get(index++);\r\n                double next = usages.get(index);\r\n                if (next > checking - padding && next < checking + padding) {\r\n                    numFound++;\r\n                    if (numFound >= numOfMatchesForConsistent) {\r\n                        consistentMax = checking;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            System.out.println(\"Minimax = \\n\" + move);\r\n            System.out.printf(\"\\n%d:%d threads\\navg: %f max: %f consistent max: %s\\n\", threads, numOfThreads, avg, max, consistentMax != -1 ? consistentMax : \"n/a\");\r\n            System.out.println(usages);\r\n        }\r\n        minimax.end();\r\n\r\n    }\r\n\r\n    @Test(testName = \"Number of positions to depth \" + POSITIONS_COUNT_DEPTH)\r\n    public static void printNumOfPositions() {\r\n        Model model = model();\r\n\r\n        Stockfish stockfish = new Stockfish();\r\n        for (int depth = 1; depth <= POSITIONS_COUNT_DEPTH; depth++) {\r\n            long res, time = 0;\r\n            startTime();\r\n            res = countPositions(depth, model, MULTITHREADING_POS);\r\n            long st = stockfish.perft(depth);\r\n            Assert.assertEquals(st, res);\r\n            time += stopTime();\r\n            System.out.println(\"Depth: \" + depth + \" Result: \" + res + \" positions Time: \" + time + \" milliseconds\");\r\n        }\r\n        stockfish.stopEngine();\r\n    }\r\n\r\n    @Test(testName = \"Fen Generation\")\r\n    public static void fenTest() {\r\n        String fen = FEN.generateFEN(model());\r\n        Assert.assertEquals(fen, \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\r\n    }\r\n\r\n    private static Model model() {\r\n        return new Model() {{\r\n            setup(null);\r\n        }};\r\n    }\r\n\r\n    //\r\n//    @Test(testName = \"\")\r\n//    private static void positionsCountRoot(int depth) {\r\n//\r\n//        Assert.assertEquals(1, 2, \"\");\r\n//    }\r\n    @Test(enabled = false)\r\n    public static void startTime() {\r\n        dateTime = ZonedDateTime.now();\r\n    }\r\n\r\n    private static void isInCheck() {\r\n        Model model = new Model();\r\n\r\n        model.setup(\"1n2kbnr/pppppppp/3q4/8/r2K1b2/8/PP1PPPPP/RNBQ1BNR w k - 0 1\");\r\n//        model.setup(null);\r\n        ;\r\n    }\r\n\r\n    private static void rayVsMoveLegalization() {\r\n        Model model = new Model();\r\n        model.setup(null);\r\n        MovesList moves = MoveGenerator.generateMoves(model);\r\n        long time = 0;\r\n        int numOfTries = 100000;\r\n        for (int i = 0; i < numOfTries; i++) {\r\n            long millis = System.currentTimeMillis();\r\n            for (Move move : moves) {\r\n                model.applyMove(move);\r\n                model.isInCheck();\r\n                model.undoMove();\r\n            }\r\n            time += System.currentTimeMillis() - millis;\r\n        }\r\n\r\n        System.out.println(\"Legalization took \" + time);\r\n        time = 0;\r\n        for (int i = 0; i < numOfTries; i++) {\r\n            long millis = System.currentTimeMillis();\r\n            AttackedSquares.getPins(model, PlayerColor.WHITE);\r\n            time += System.currentTimeMillis() - millis;\r\n        }\r\n        System.out.println(\"Ray took \" + time);\r\n\r\n    }\r\n\r\n    private static void ray() {\r\n        String fen = \"3r4/8/1Rbk4/2q5/2N5/Q7/8/3R4 w - - 0 1\";\r\n        Model model = new Model(fen);\r\n        Attack check = AttackedSquares.getCheck(model, PlayerColor.WHITE);\r\n        check.prettyPrint();\r\n    }\r\n\r\n    public static long stopTime() {\r\n        assert dateTime != null;\r\n        return dateTime.until(ZonedDateTime.now(), ChronoUnit.MILLIS);\r\n    }\r\n\r\n    //region\r\n    //todo check if Math.abs(-1).... is faster then if/switch/opp hash map\r\n    private static void mathVsIf() {\r\n        enum e {\r\n            a, b, c\r\n        }\r\n    }\r\n\r\n    private static void pins() {\r\n        String fen = \"3r4/8/1Rbk4/2q5/2N5/Q7/8/3R4 w - - 0 1\";\r\n        Model model = new Model(fen);\r\n        System.out.println(\"Model: \\n\");\r\n        model.printBoard();\r\n        Pins pins = AttackedSquares.getPins(model, PlayerColor.WHITE);\r\n        pins.prettyPrint();\r\n\r\n    }\r\n\r\n    private static void moveGeneration() {\r\n        String fen = null;\r\n        Model model = new Model(fen);\r\n        model.generateAllMoves();\r\n//        ModelMovesList moves = MoveGenerator.generateMoves(model);\r\n//        System.out.println(moves);\r\n//        moves.prettyPrint();\r\n    }\r\n\r\n    private static void testSetLocsTime() {\r\n        int numOfTries = 1000000;\r\n        long time = 0;\r\n        for (int i = 0; i < numOfTries; i++) {\r\n            long millis = System.currentTimeMillis();\r\n            Bitboard bitboard = new Bitboard(Math.abs(new Random().nextLong()));\r\n            ArrayList<Location> setLocs = new ArrayList<>();\r\n            int position = 1;\r\n            long num = bitboard.getBitBoard();\r\n            while (num != 0) {\r\n                if ((num & 1) != 0) {\r\n                    Location loc = Location.getLoc(position - 1);\r\n                    assert loc != null;\r\n                    setLocs.add(loc);\r\n                }\r\n                position++;\r\n                num = num >>> 1;\r\n            }\r\n            time += System.currentTimeMillis() - millis;\r\n\r\n        }\r\n        System.out.println(\"shifting took \" + time);\r\n        time = 0;\r\n        for (int i = 0; i < numOfTries; i++) {\r\n            long millis = System.currentTimeMillis();\r\n            Bitboard bitboard = new Bitboard(Math.abs(new Random().nextLong()));\r\n            ArrayList<Location> setLocs = new ArrayList<>();\r\n            for (Location loc : Location.ALL_LOCS) {\r\n                if (bitboard.isSet(loc))\r\n                    setLocs.add(loc);\r\n            }\r\n            time += System.currentTimeMillis() - millis;\r\n        }\r\n\r\n        System.out.println(\"is set took \" + time);\r\n    }\r\n\r\n    private static void fen() {\r\n        Model model = new Model();\r\n        System.out.println(\"Fen = \" + FEN.generateFEN(model));\r\n//        FEN.loadFEN(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", null);\r\n    }\r\n\r\n    private static void threefold() {\r\n        Model model = new Model();\r\n        String[] pgn = {\"Nc3\", \"Nc6\", \"Nb1\", \"Nb8\", \"Nc3\", \"Nc6\", \"Nb1\", \"Nb8\"};\r\n        int index = 0;\r\n        while (!Eval.isGameOver(model)) {\r\n            var moves = model.generateAllMoves();\r\n            int finalIndex = index;\r\n            Move applying = moves.stream()\r\n                    .filter(move ->\r\n                            move.getAnnotation().startsWith(pgn[finalIndex]))\r\n                    .findAny()\r\n                    .orElse(null);\r\n            index++;\r\n            if (applying == null) {\r\n                System.out.println(\"didnt find. moves = \" + moves);\r\n                assert false;\r\n            }\r\n            System.out.println(\"Move: \" + applying + \" Model:\\n\");\r\n            model.printBoard();\r\n\r\n            model.applyMove(applying);\r\n\r\n            if (applying.getThreefoldStatus() == Move.ThreefoldStatus.CAN_CLAIM) {\r\n                System.out.println(\"Found threefold!\");\r\n                break;\r\n            }\r\n        }\r\n        System.out.println(Eval.getEvaluation(model));\r\n    }\r\n\r\n    private static void evaluation() {\r\n        Model model = new Model();\r\n        Evaluation evaluation = Eval.getEvaluation(model);\r\n        System.out.println(\"Evaluation = \" + evaluation);\r\n    }\r\n\r\n    private static void fiftyMoves() {\r\n        Model model = new Model();\r\n        int i = 0;\r\n        while (!Eval.isGameOver(model)) {\r\n            Move move = model.generateAllMoves()\r\n                    .stream()\r\n                    .filter(Move::isReversible)\r\n                    .findAny()\r\n                    .orElse(null);\r\n            if (move == null) {\r\n                System.out.println(\"Couldnt find a reversible move.\");\r\n                break;\r\n            }\r\n            System.out.println(\"Move \" + (++i) + \" = \" + move);\r\n            model.applyMove(move);\r\n\r\n        }\r\n        System.out.println(model);\r\n    }\r\n\r\n    //endregion\r\n\r\n    private static void attackedSquares() {\r\n        String fen = null;\r\n        Model model = new Model(fen);\r\n        System.out.println(\"Model: \\n\");\r\n        model.printBoard();\r\n        System.out.println();\r\n        Bitboard attacked = AttackedSquares.getPieceAttacksFrom(PieceType.QUEEN, new Bitboard(Location.E4), PlayerColor.WHITE, model);\r\n        System.out.println(attacked.prettyBoard());\r\n    }\r\n\r\n    public static long countPositions(int depth, Model model, boolean isRoot) {\r\n        if (depth == 0)\r\n            return 1;\r\n        ArrayList<Move> moves = model.generateAllMoves();\r\n        AtomicLong num = new AtomicLong();\r\n\r\n        if (isRoot) {\r\n            ForkJoinPool threadPool = new ForkJoinPool(numOfThreads);\r\n            threadPool.execute(() -> {\r\n                num.set(moves.stream().parallel().mapToLong(move -> {\r\n                    long result = executePos(depth, new Model(model), move);\r\n//                    Stockfish stockfish = new Stockfish();\r\n//                    Assert.assertEquals(stockfish.perft(depth, move), result);\r\n//                    stockfish.stopEngine();\r\n                    return result;\r\n                }).sum());\r\n            });\r\n            try {\r\n                threadPool.shutdown();\r\n                if (!threadPool.awaitTermination(Long.MAX_VALUE, TimeUnit.SECONDS)) {\r\n                    IntStream.range(0, 1000).forEach(i -> {\r\n                        System.err.print(\"F\");\r\n                    });\r\n                }\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            num.set(moves.stream().mapToLong(move -> executePos(depth, model, move)).sum());\r\n        }\r\n        return num.get();\r\n    }\r\n\r\n    private static long executePos(int depth, Model model, Move move) {\r\n        model.applyMove(move);\r\n        long res = countPositions(depth - 1, model, false);\r\n        if (PRINT_POSITIONS_MOVES && depth == POSITIONS_COUNT_DEPTH)\r\n            System.out.println(move.getBasicMoveAnnotation() + \": \" + res);\r\n        model.undoMove();\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ver14/Tests/Tests.java b/src/ver14/Tests/Tests.java
--- a/src/ver14/Tests/Tests.java	
+++ b/src/ver14/Tests/Tests.java	
@@ -41,9 +41,9 @@
 
     private static void minimaxVsStockfish() {
         Server server = new Server();
-        Server.VS_STOCKFISH = true;
         Game.showGameView = true;
         server.runServer();
+        server.minimaxVsStockfish();
     }
 
     private static void minimaxThreadsTest() {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"ChessServerProj:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c8b696c4-dc4a-459e-b95c-014fc448a61e\" name=\"Changes\" comment=\" v\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/scopes/MyScope.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ContextType.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorType.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessClientProj/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessClientProj/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessClientProj/src/ver14/Client.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessClientProj/src/ver14/Client.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/BoardOverlay.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/BoardOverlay.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/ViewLocation.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/ViewLocation.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/copyright/profiles_settings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/copyright/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/scopes/Unnamed.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/Model/Model.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/Model/Model.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/MyServerSocket.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/MyServerSocket.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/Server.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/Server.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ThreadsManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ThreadsManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ver14/SharedClasses/networking/AppSocket.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ver14/SharedClasses/networking/AppSocket.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FormatOnSaveOptions\">\r\n    <option name=\"myRunOnSave\" value=\"true\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/../..\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/../..\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/server/game/GameSession.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/server/players/Player.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/server/players/PlayerNet.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/server/Server.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/Tests.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/SharedClasses/messages/Message.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/server/DB/DB.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/model_classes/Bitboard.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/ver9/server/DB/Condition.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"NamedScopeManager\">\r\n    <order>\r\n      <scope name=\"MyScope\" />\r\n    </order>\r\n  </component>\r\n  <component name=\"OptimizeOnSaveOptions\">\r\n    <option name=\"myRunOnSave\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"20lvWKUkTSaTPlIwkybX70l0e6x\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"Downloaded.Files.Path\" value=\"C:\\Users\\bezal\\Documents\\GitHub\\Chess\\ServerClient\\ChessServerProj\\src\\libs\" />\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"true\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last.edited.regexp\" value=\"ssDatesdd\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/assets/dlls\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.19885057\" />\r\n    <property name=\"rearrange.code.on.save\" value=\"true\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"copyright\" />\r\n    <property name=\"two.files.diff.last.used.file\" value=\"$PROJECT_DIR$/src/ver13/Model/Bitboard.java\" />\r\n  </component>\r\n  <component name=\"ReaderModeSettings\">\r\n    <option name=\"showLigatures\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\Chess\\ServerClient\\ChessServerProj\\src\\assets\\dlls\" />\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\Chess\\ServerClient\\ChessServerProj\\src\\libs\" />\r\n      <recent name=\"E:\\SharedCo\\Chess\\ServerClient\\ChessServerProj\\src\\ver14\" />\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\Chess\\ServerClient\\ChessServerProj\\src\\ver13\" />\r\n      <recent name=\"E:\\SharedCo\\Chess\\ServerClient\\ChessServerProj\\src\\ver12\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\bezal\\Documents\\GitHub\\SharedCo\\IdeaProjects\\ChessServerProj\\src\" />\r\n      <recent name=\"E:\\SharedCo\\IdeaProjects\\ChessServerProj\\src\\main\\java\" />\r\n      <recent name=\"E:\\SharedCo\\IdeaProjects\\ChessServerProj\\src\\assets\\GameInfo\\\" />\r\n      <recent name=\"E:\\SharedCo\\IdeaProjects\\ChessServerProj\\src\\assets\\Stockfish\" />\r\n    </key>\r\n    <key name=\"MoveMembersDialog.RECENTS_KEY\">\r\n      <recent name=\"ver5.server.DB.DB.Table\" />\r\n    </key>\r\n    <key name=\"MoveInnerDialog.RECENTS_KEY\">\r\n      <recent name=\"ver14.SharedClasses.Threads.ErrorHandling\" />\r\n      <recent name=\"ver14.Model.minimax\" />\r\n      <recent name=\"ver13.Tests\" />\r\n      <recent name=\"ver10.SharedClasses.DBActions.Statements\" />\r\n      <recent name=\"ver10.SharedClasses.DBActions.Arg\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"ver10.SharedClasses.DBActions.Statements\" />\r\n      <recent name=\"ver10.SharedClasses.DBActions\" />\r\n      <recent name=\"ver9\" />\r\n      <recent name=\"ver6.SharedClasses.networking\" />\r\n      <recent name=\"ver5.SharedClasses.networking\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"Global_Classes\" />\r\n      <recent name=\"ver3.model_classes\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"TestNG.Tests\">\r\n    <configuration name=\"CastlingRights$Side\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.SharedClasses.Game.moves.CastlingRights$Side\" />\r\n      <module name=\"ChessServerProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.SharedClasses.Game.moves.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Location\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.SharedClasses.Game.Location\" />\r\n      <module name=\"ChessServerProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.SharedClasses.Game.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver12.Server\" />\r\n      <module name=\"ChessServerProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tests\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.Tests.Tests\" />\r\n      <module name=\"ChessServerProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.Tests.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tests\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver13.Tests.Tests\" />\r\n      <module name=\"ChessServerProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <module name=\"ChessServerProj\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tests.fenTest\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ChessServerProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.Tests.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"ver14.Tests\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.Tests.Tests\" />\r\n      <option name=\"METHOD_NAME\" value=\"fenTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Tests.printNumOfPositions\" type=\"TestNG\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ChessServerProj\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"ver14.Tests.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"ver14.Tests\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"ver14.Tests.Tests\" />\r\n      <option name=\"METHOD_NAME\" value=\"printNumOfPositions\" />\r\n      <option name=\"TEST_OBJECT\" value=\"METHOD\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Server\" />\r\n      <item itemvalue=\"Application.Tests\" />\r\n      <item itemvalue=\"Application.Location\" />\r\n      <item itemvalue=\"Application.CastlingRights$Side\" />\r\n      <item itemvalue=\"TestNG.Tests\" />\r\n      <item itemvalue=\"TestNG.Tests.fenTest\" />\r\n      <item itemvalue=\"TestNG.Tests.printNumOfPositions\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"TestNG.Tests.printNumOfPositions\" />\r\n        <item itemvalue=\"Application.Tests\" />\r\n        <item itemvalue=\"Application.Location\" />\r\n        <item itemvalue=\"TestNG.Tests.fenTest\" />\r\n        <item itemvalue=\"Application.CastlingRights$Side\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c8b696c4-dc4a-459e-b95c-014fc448a61e\" name=\"Changes\" comment=\"\" />\r\n      <created>1636632021405</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1636632021405</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00001\" summary=\"created error handling\">\r\n      <created>1647589157621</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00001\" />\r\n      <updated>1647589157621</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00002\" summary=\"created error handling\">\r\n      <created>1647608263579</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00002\" />\r\n      <updated>1647608263579</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00003\" summary=\"fixed Location\">\r\n      <created>1647698466699</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00003\" />\r\n      <updated>1647698466699</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"created error handling\" />\r\n    <MESSAGE value=\"fixed Location\" />\r\n    <MESSAGE value=\" v\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\" v\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.io.NotSerializableException\" package=\"java.io\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n        <breakpoint type=\"java-exception\">\r\n          <properties class=\"java.lang.AssertionError\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"8\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.EmptyStackException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"48\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.net.SocketException\" package=\"java.net\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"78\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.Error\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"87\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"net.ucanaccess.jdbc.UcanaccessSQLException\" package=\"net.ucanaccess.jdbc\" />\r\n          <option name=\"timeStamp\" value=\"101\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalArgumentException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"104\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ArrayIndexOutOfBoundsException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"105\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.net.SocketTimeoutException\" package=\"java.net\" />\r\n          <option name=\"timeStamp\" value=\"106\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.ClassCastException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"142\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.io.InvalidClassException\" package=\"java.io\" />\r\n          <option name=\"timeStamp\" value=\"144\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.io.StreamCorruptedException\" package=\"java.io\" />\r\n          <option name=\"timeStamp\" value=\"145\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.io.UTFDataFormatException\" package=\"java.io\" />\r\n          <option name=\"timeStamp\" value=\"146\" />\r\n        </breakpoint>\r\n        <breakpoint type=\"java-exception\">\r\n          <properties class=\"java.lang.RuntimeException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"151\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.ConcurrentModificationException\" package=\"java.util\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"154\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IndexOutOfBoundsException\" package=\"java.lang\">\r\n            <option name=\"NOTIFY_CAUGHT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"157\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.AssertionError\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"169\" />\r\n        </breakpoint>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/ver4/model_classes/Minimax.java</url>\r\n          <line>204</line>\r\n          <option name=\"timeStamp\" value=\"19\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/ver7/server/players/PlayerNet.java</url>\r\n          <line>54</line>\r\n          <option name=\"timeStamp\" value=\"155\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/ver13/Model/PiecesBBs.java</url>\r\n          <line>45</line>\r\n          <option name=\"timeStamp\" value=\"164\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/ver14/game/Game.java</url>\r\n          <line>126</line>\r\n          <option name=\"timeStamp\" value=\"166\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/ver14/Model/Model.java</url>\r\n          <line>195</line>\r\n          <option name=\"timeStamp\" value=\"170\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n      <breakpoints-defaults>\r\n        <breakpoint suspend=\"THREAD\" type=\"java-line\" />\r\n      </breakpoints-defaults>\r\n    </breakpoint-manager>\r\n    <pin-to-top-manager>\r\n      <pinned-members>\r\n        <PinnedItemInfo parentTag=\"java.lang.AssertionError\" memberName=\"cause\" />\r\n      </pinned-members>\r\n    </pin-to-top-manager>\r\n    <watches-manager>\r\n      <configuration name=\"TestNG\">\r\n        <watch expression=\"print();\" language=\"JAVA\" />\r\n      </configuration>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"print();\" language=\"JAVA\" />\r\n        <watch expression=\"board.print();\" language=\"JAVA\" />\r\n        <watch expression=\"generateAllMoves()\" language=\"JAVA\" />\r\n        <watch expression=\"board.getPiece(movingFrom)\" language=\"JAVA\" />\r\n        <watch expression=\"board.getPiece(movingTo)\" language=\"JAVA\" />\r\n        <watch expression=\"MoveGenerator.generateMoves(this,new GenerationSettings(false,false)).stream().filter(move -&gt; move.moveFlag.isCastling).toList()\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -10,25 +10,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="c8b696c4-dc4a-459e-b95c-014fc448a61e" name="Changes" comment=" v">
-      <change afterPath="$PROJECT_DIR$/.idea/scopes/MyScope.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ContextType.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorType.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/../ChessClientProj/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessClientProj/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessClientProj/src/ver14/Client.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessClientProj/src/ver14/Client.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/BoardOverlay.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/BoardOverlay.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/ViewLocation.java" beforeDir="false" afterPath="$PROJECT_DIR$/../ChessClientProj/src/ver14/view/Board/ViewLocation.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/copyright/profiles_settings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/copyright/profiles_settings.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/scopes/Unnamed.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/Model/Model.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/Model/Model.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/MyServerSocket.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/MyServerSocket.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/ver14/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/Server.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorContext.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/ErrorManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ErrorHandling/MyError.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/ver14/ServerMessagesHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/ServerMessagesHandler.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ThreadsManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/Threads/ThreadsManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ver14/SharedClasses/networking/AppSocket.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/SharedClasses/networking/AppSocket.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/ver14/Tests/Tests.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/Tests/Tests.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/ver14/UsernameSuggestions.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ver14/UsernameSuggestions.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -152,7 +140,7 @@
       <recent name="ver3.model_classes" />
     </key>
   </component>
-  <component name="RunManager" selected="TestNG.Tests">
+  <component name="RunManager" selected="Application.Server">
     <configuration name="CastlingRights$Side" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="ver14.SharedClasses.Game.moves.CastlingRights$Side" />
       <module name="ChessServerProj" />
@@ -300,7 +288,13 @@
       <option name="presentableId" value="LOCAL‎00003" />
       <updated>1647698466699</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL‎00004" summary=" v">
+      <created>1647711347716</created>
+      <option name="number" value="LOCAL‎00004" />
+      <option name="presentableId" value="LOCAL‎00004" />
+      <updated>1647711347716</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
Index: src/ver14/SharedClasses/Threads/ThreadsManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ver14.SharedClasses.Threads;\r\n\r\nimport ver14.SharedClasses.Threads.ErrorHandling.*;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ThreadsManager {\r\n    private final static ArrayList<MyThread> threads;\r\n\r\n\r\n    static {\r\n        threads = new ArrayList<>();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        ErrorManager.setEnvManager(new EnvManager() {\r\n            @Override\r\n            public void handledErr(MyError err) {\r\n                System.out.println(err + \"\");\r\n            }\r\n\r\n            @Override\r\n            public void criticalErr(MyError err) {\r\n                System.err.println(err + \" *panik*\");\r\n            }\r\n        });\r\n        ErrorManager.setHandler(ErrorType.Model, e -> {\r\n            System.out.println(\"hmmm what a curious thing this is\");\r\n        });\r\n        handleErrors(() -> {\r\n            MyError err = new MyError(ErrorType.Model);\r\n            err.addContext(new ErrorContext() {\r\n                @Override\r\n                public ContextType contextType() {\r\n                    return ContextType.Game;\r\n                }\r\n\r\n                @Override\r\n                public String toString() {\r\n                    return \"$classname{}\";\r\n                }\r\n            });\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    public static void handleErrors(ThrowingRunnable runnable) {\r\n\r\n        MyError err = null;\r\n        try {\r\n            runnable.run();\r\n        } catch (MyError e) {\r\n            err = e;\r\n        } catch (AssertionError assertionError) {\r\n            throw assertionError;\r\n        } catch (Throwable t) {\r\n            err = new MyError(t);\r\n        }\r\n        if (err != null)\r\n            ErrorManager.handle(err);\r\n    }\r\n\r\n    public static MyThread createThread(ThrowingRunnable runnable, boolean start) {\r\n        MyThread thread = new HandledThread(runnable);\r\n        if (start)\r\n            thread.start();\r\n        return thread;\r\n    }\r\n\r\n\r\n    public static abstract class MyThread extends Thread {\r\n        public MyThread() {\r\n            threads.add(this);\r\n        }\r\n\r\n        @Override\r\n        public final void run() {\r\n            handleErrors(this::handledRun);\r\n        }\r\n\r\n        protected abstract void handledRun() throws Throwable;\r\n    }\r\n\r\n    public static class HandledThread extends MyThread {\r\n\r\n        private final ThrowingRunnable runnable;\r\n\r\n        public HandledThread(ThrowingRunnable runnable) {\r\n            this.runnable = runnable;\r\n        }\r\n\r\n        public static HandledThread run(ThrowingRunnable runnable) {\r\n            HandledThread thread = new HandledThread(runnable);\r\n            thread.start();\r\n            return thread;\r\n        }\r\n\r\n        @Override\r\n        protected void handledRun() throws Throwable {\r\n            this.runnable.run();\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/ver14/SharedClasses/Threads/ThreadsManager.java b/src/ver14/SharedClasses/Threads/ThreadsManager.java
--- a/src/ver14/SharedClasses/Threads/ThreadsManager.java	
+++ b/src/ver14/SharedClasses/Threads/ThreadsManager.java	
@@ -79,6 +79,8 @@
         }
 
         protected abstract void handledRun() throws Throwable;
+
+        
     }
 
     public static class HandledThread extends MyThread {
